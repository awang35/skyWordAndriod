package com.skyWords.runtime.scene;

import org.andengine.engine.camera.Camera;
import org.andengine.engine.camera.hud.HUD;
import org.andengine.entity.scene.background.Background;
import org.andengine.entity.text.Text;
import org.andengine.entity.text.TextOptions;
import org.andengine.extension.physics.box2d.FixedStepPhysicsWorld;
import org.andengine.extension.physics.box2d.PhysicsWorld;
import org.andengine.util.HorizontalAlign;
import org.andengine.util.color.Color;

import com.badlogic.gdx.math.Vector2;
import com.skyWords.runtime.SkyWordsActivity;
import com.skyWords.manager.BaseScene;
import com.skyWords.manager.SceneManager.SceneType;

public class GameScene extends BaseScene{
	private HUD gameHUD;
	private Text scoreText;
	private int score = 0;
	private PhysicsWorld physicsWorld;
	// juan
	public Ship ship;
	Camera mCamera;
	public GameScene()
	{
		//setBackground(...
		mCamera = SkyWordsActivity.getSharedInstance().mCamera;
		ship = Ship.getSharedInstance();
		attachChild(ship.sprite);
	}
	
	private void addToScore(int i)
	{
		score += i;
		scoreText.setText("Score: " + score);
	}
	private void createHUD()
	{
		gameHUD = new HUD();

		// CREATE SCORE TEXT

		scoreText = new Text(20, 420, resourcesManager.font, "Score: 0123456789", new TextOptions(HorizontalAlign.LEFT), vbom);
		
		scoreText.setSkewCenter(0, -100);    
		scoreText.setText("Score: 0");
		gameHUD.attachChild(scoreText);

		camera.setHUD(gameHUD);
	}
	private void createBackground()
	{
	    setBackground(new Background(Color.GREEN)); // juan changed color from blue to green
	}
	private void createPhysics()
	{
	    physicsWorld = new FixedStepPhysicsWorld(60, new Vector2(0, -17), false); 
	    registerUpdateHandler(physicsWorld);
	}
	@Override
	public void createScene() {
		createBackground();
	    createHUD();
	    createPhysics();
	}

	@Override
	public void onBackKeyPressed() {
		// TODO Auto-generated method stub
		setBackground(new Background(Color.BLUE)); // didnt change the screen
		//setBackground(new Background(Color.GREEN));
	}

	@Override
	public SceneType getSceneType() {
		// TODO Auto-generated method stub
		return SceneType.SCENE_GAME;
	}

	@Override
	public void disposeScene() {
	    camera.setHUD(null);
	    camera.setCenter(400, 240);

	    // TODO code responsible for disposing scene
	    // removing all game scene objects.

	}

}
